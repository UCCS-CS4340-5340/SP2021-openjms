/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.client;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import javax.jms.JMSException;
import javax.naming.Reference;
import org.exolab.jms.client.JmsTopic;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestJmsTopic {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic();
      JmsTopic jmsTopic1 = new JmsTopic("%|aBZ3|Zg1EH");
      boolean boolean0 = jmsTopic0.equals((Object) jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("~l6z");
      int int0 = jmsTopic0.hashCode();
      assertEquals(3859250, int0);
  }

  @Test
  public void test2()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("**");
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) byteArrayOutputStream0);
      jmsTopic0.writeExternal((ObjectOutput) objectOutputStream0);
      assertEquals("**-false", jmsTopic0.toString());
  }

  @Test
  public void test3()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("%h\u0007gb*s");
      boolean boolean0 = jmsTopic0.isWildCard();
      assertEquals(false, boolean0);
  }

  @Test
  public void test4()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("~l6z");
      String string0 = jmsTopic0.getTopicName();
      assertEquals("~l6z", string0);
  }

  @Test
  public void test5()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("(*VA&Rf@!2_z");
      boolean boolean0 = jmsTopic0.equals((Object) null);
      assertEquals(false, boolean0);
  }

  @Test
  public void test6()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic(" This version = ");
      boolean boolean0 = jmsTopic0.equals((Object) jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test7()  throws Throwable  {
      boolean boolean0 = JmsTopic.isWildCard("**");
      assertEquals(true, boolean0);
  }

  @Test
  public void test8()  throws Throwable  {
      boolean boolean0 = JmsTopic.isWildCard(" This version = ");
      assertEquals(false, boolean0);
  }

  @Test
  public void test9()  throws Throwable  {
      boolean boolean0 = JmsTopic.isWildCard("*");
      assertEquals(true, boolean0);
  }

  @Test
  public void test10()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic(" This version = ");
      boolean boolean0 = jmsTopic0.match(jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test11()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("");
      JmsTopic jmsTopic1 = new JmsTopic(" $|b|,BppeN1xq0>");
      boolean boolean0 = jmsTopic0.match(jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test12()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Yzn>4Eo::");
      JmsTopic jmsTopic1 = new JmsTopic("");
      boolean boolean0 = jmsTopic0.match(jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test13()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("*");
      boolean boolean0 = jmsTopic0.match(jmsTopic0);
      assertEquals(true, boolean0);
  }

  @Test
  public void test14()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("Yzn>4Eo::");
      JmsTopic jmsTopic1 = new JmsTopic(" $|b|,BppeN1xq0>");
      boolean boolean0 = jmsTopic0.match(jmsTopic1);
      assertEquals(false, boolean0);
  }

  @Test
  public void test15()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("(*VA&Rf@!2_z");
      Reference reference0 = jmsTopic0.getReference();
      assertEquals("Reference Class Name: org.exolab.jms.client.JmsTopic\nType: name\nContent: (*VA&Rf@!2_z\nType: persistent\nContent: false\n", reference0.toString());
  }

  @Test
  public void test16()  throws Throwable  {
      JmsTopic jmsTopic0 = new JmsTopic("(*VA&Rf@!2_z");
      jmsTopic0.setPersistent(true);
      Reference reference0 = jmsTopic0.getReference();
      assertEquals("Reference Class Name: org.exolab.jms.client.JmsTopic\nType: name\nContent: (*VA&Rf@!2_z\nType: persistent\nContent: true\n", reference0.toString());
      assertNotNull(reference0);
  }
}
