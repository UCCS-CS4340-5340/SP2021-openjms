/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.net.connector;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectInput;
import java.lang.reflect.Method;
import java.rmi.server.ObjID;
import org.exolab.jms.net.connector.Request;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestRequest {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjID objID0 = new ObjID();
      Object[] objectArray0 = new Object[10];
      Request request0 = new Request(objID0, (Method) null, objectArray0, 1L);
      request0.getArgs();
      assertEquals("[-35abf463:13f917cad2e:-7dc4, 8831151580466347198]", objID0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjID objID0 = new ObjID();
      Object[] objectArray0 = new Object[8];
      Request request0 = new Request(objID0, (Method) null, objectArray0, (-844L));
      request0.getMethod();
      assertEquals("[-35abf463:13f917cad2e:-7dc1, 2360550634652266151]", objID0.toString());
  }

  @Test
  public void test2()  throws Throwable  {
      ObjID objID0 = new ObjID();
      Object[] objectArray0 = new Object[10];
      Request request0 = new Request(objID0, (Method) null, objectArray0, 1L);
      long long0 = request0.getMethodID();
      assertEquals(1L, long0);
  }

  @Test
  public void test3()  throws Throwable  {
      ObjID objID0 = new ObjID(0);
      Object[] objectArray0 = new Object[4];
      Request request0 = new Request(objID0, (Method) null, objectArray0, 1L);
      ObjID objID1 = request0.getObjID();
      assertNotNull(objID1);
      assertEquals(1L, request0.getMethodID());
  }

  @Test
  public void test4()  throws Throwable  {
      // Undeclared exception!
      try {
        Request.read((ObjectInput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      ObjID objID0 = new ObjID((-1597));
      Object[] objectArray0 = new Object[1];
      Request request0 = new Request(objID0, (Method) null, objectArray0, (long) (-1597));
      request0.getURI();
      assertEquals((-1597L), request0.getMethodID());
  }
}
