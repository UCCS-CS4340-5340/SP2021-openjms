/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.jndi;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.Hashtable;
import java.util.Properties;
import javax.naming.CompositeName;
import javax.naming.CompoundName;
import javax.naming.ConfigurationException;
import javax.naming.InvalidNameException;
import javax.naming.Name;
import javax.naming.NamingException;
import org.codehaus.spice.jndikit.RemoteContext;
import org.exolab.jms.jndi.ORBRemoteContext;
import org.exolab.jms.net.proxy.Proxy;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestORBRemoteContext {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.lookupLink("xD!3dwBgGtr8v{kGyM/");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.bind("UN]M", "");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      CompositeName compositeName0 = new CompositeName();
      ORBRemoteContext oRBRemoteContext1 = (ORBRemoteContext)oRBRemoteContext0.lookupLink((Name) compositeName0);
      oRBRemoteContext0.close();
      assertNotSame(oRBRemoteContext0, oRBRemoteContext1);
  }

  @Test
  public void test3()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Object object0 = oRBRemoteContext0.addToEnvironment("n", "");
      assertNull(object0);
  }

  @Test
  public void test4()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("", properties0);
      ORBRemoteContext oRBRemoteContext1 = (ORBRemoteContext)oRBRemoteContext0.lookup((Name) compoundName0);
      assertNotSame(oRBRemoteContext1, oRBRemoteContext0);
  }

  @Test
  public void test5()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.composeName("bAX?.$sQ-7F^S(,T", "bAX?.$sQ-7F^S(,T");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test6()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.lookup("u.N");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test7()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      CompositeName compositeName0 = new CompositeName("");
      try {
        oRBRemoteContext0.unbind((Name) compositeName0);
        fail("Expecting exception: InvalidNameException");
      } catch(InvalidNameException e) {
        /*
         * Failed to unbind self
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("8XF6", properties0);
      try {
        oRBRemoteContext0.rename((Name) compoundName0, (Name) compoundName0);
        fail("Expecting exception: InvalidNameException");
      } catch(InvalidNameException e) {
        /*
         * Failed to rebind identical names
         */
      }
  }

  @Test
  public void test9()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.rename("", "");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Object object0 = oRBRemoteContext0.removeFromEnvironment("4*HIz0Hw4=n)[OXo");
      assertNull(object0);
  }

  @Test
  public void test11()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("u.N", properties0);
      try {
        oRBRemoteContext0.bind((Name) compoundName0, (Object) "Ku.N");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain Namespace
         */
      }
  }

  @Test
  public void test12()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      // Undeclared exception!
      try {
        oRBRemoteContext0.getNameParser((Name) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test13()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("", properties0);
      CompoundName compoundName1 = (CompoundName)oRBRemoteContext0.composeName((Name) compoundName0, (Name) compoundName0);
      assertNotSame(compoundName1, compoundName0);
  }

  @Test
  public void test14()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      CompositeName compositeName0 = new CompositeName();
      try {
        oRBRemoteContext0.createSubcontext((Name) compositeName0);
        fail("Expecting exception: InvalidNameException");
      } catch(InvalidNameException e) {
        /*
         * Failed to create null subcontext
         */
      }
  }

  @Test
  public void test15()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.createSubcontext("");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.destroySubcontext("");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test17()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      // Undeclared exception!
      try {
        oRBRemoteContext0.rebind((Name) null, (Object) "java.naming.factory.initial");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test18()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      CompositeName compositeName0 = new CompositeName();
      try {
        oRBRemoteContext0.listBindings((Name) compositeName0);
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test19()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.getNameInNamespace();
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test20()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.list("vro");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test21()  throws Throwable  {
      Hashtable<RemoteContext, Proxy> hashtable0 = new Hashtable<RemoteContext, Proxy>();
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("T", properties0);
      RemoteContext remoteContext0 = new RemoteContext((Hashtable) hashtable0, (Name) compoundName0);
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.rebind("T", (Object) null);
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test22()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.listBindings("3");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      // Undeclared exception!
      try {
        oRBRemoteContext0.destroySubcontext((Name) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test24()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      Properties properties0 = new Properties();
      CompoundName compoundName0 = new CompoundName("", properties0);
      try {
        oRBRemoteContext0.list((Name) compoundName0);
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test25()  throws Throwable  {
      Hashtable<RemoteContext, RemoteContext> hashtable0 = new Hashtable<RemoteContext, RemoteContext>();
      CompositeName compositeName0 = new CompositeName();
      RemoteContext remoteContext0 = new RemoteContext((Hashtable) hashtable0, (Name) compositeName0);
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.unbind((String) null);
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test26()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      try {
        oRBRemoteContext0.getNameParser("T-`-}eE");
        fail("Expecting exception: ConfigurationException");
      } catch(ConfigurationException e) {
        /*
         * Context does not contain provider
         */
      }
  }

  @Test
  public void test27()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      oRBRemoteContext0.close();
      oRBRemoteContext0.finalize();
  }

  @Test
  public void test28()  throws Throwable  {
      RemoteContext remoteContext0 = new RemoteContext();
      ORBRemoteContext oRBRemoteContext0 = new ORBRemoteContext(remoteContext0);
      remoteContext0.close();
      oRBRemoteContext0.close();
  }
}
