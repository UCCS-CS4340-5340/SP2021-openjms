/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.message;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import org.exolab.jms.message.Type;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestType {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Type type0 = new Type();
      // Undeclared exception!
      try {
        type0.isEqual(type0);
        fail("Expecting exception: IllegalArgumentException");
      } catch(IllegalArgumentException e) {
        /*
         * StringEquals is not supposed to work on a null caller
         */
      }
  }

  @Test
  public void test1()  throws Throwable  {
      Type type0 = new Type();
      // Undeclared exception!
      try {
        type0.writeExternal((ObjectOutput) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      Type type0 = new Type();
      String string0 = type0.getType();
      assertNull(string0);
  }

  @Test
  public void test3()  throws Throwable  {
      Type type0 = new Type("ml4B&&`Sf}4");
      assertEquals("ml4B&&`Sf}4", type0.getType());
  }
}
