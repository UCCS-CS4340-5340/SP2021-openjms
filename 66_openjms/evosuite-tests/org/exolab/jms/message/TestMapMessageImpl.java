/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.message;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.ObjectOutput;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.util.Enumeration;
import javax.jms.JMSException;
import javax.jms.MessageFormatException;
import javax.jms.MessageNotWriteableException;
import org.exolab.jms.message.MapMessageImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestMapMessageImpl {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setObject("Cannot convert null value to char", "StreamMessage");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test1()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getByte("esM%3a=lM");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getFloat((String) null);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      Enumeration<Object> enumeration0 = mapMessageImpl0.getMapNames();
      assertNotNull(enumeration0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test4()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.getString((String) null);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test5()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getDouble("");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setInt("o9fKwqKRNV5Mikc%", 15);
      Integer integer0 = (Integer)mapMessageImpl0.getObject("o9fKwqKRNV5Mikc%");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
      assertEquals(15, (int)integer0);
  }

  @Test
  public void test7()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setFloat("Cannot convert null value to char", (float) 0L);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test8()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setByte((String) null, (byte)0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test9()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      MapMessageImpl mapMessageImpl1 = (MapMessageImpl)mapMessageImpl0.clone();
      assertNotNull(mapMessageImpl1);
      
      try {
        mapMessageImpl0.setObject("", (Object) mapMessageImpl1);
        fail("Expecting exception: MessageFormatException");
      } catch(MessageFormatException e) {
        /*
         * MapMessage does not support objects of type=org.exolab.jms.message.MapMessageImpl
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.getBoolean("or");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test11()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      ObjectOutputStream objectOutputStream0 = new ObjectOutputStream((OutputStream) pipedOutputStream0);
      mapMessageImpl0.writeExternal((ObjectOutput) objectOutputStream0);
  }

  @Test
  public void test12()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getInt((String) null);
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test13()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getShort("g76Z^l kg+:2t1");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test14()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setShort("0 Q(,+jL6h.=I", (short)240);
      Short short0 = (Short)mapMessageImpl0.getObject("0 Q(,+jL6h.=I");
      assertEquals((short)240, (short)short0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test15()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getChar("\u0005,ioik<WYS");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
        /*
         * Cannot convert null value to char
         */
      }
  }

  @Test
  public void test16()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.clearBody();
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test17()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setChar("OFF", ':');
      Character character0 = (Character)mapMessageImpl0.getObject("OFF");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
      assertEquals(':', (char)character0);
  }

  @Test
  public void test18()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setObject("No Timestamp set", (Object) false);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test19()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.itemExists("No Timestamp set");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test20()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setDouble((String) null, 1.0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test21()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setLong((String) null, (long) (byte)0);
      Long long0 = (Long)mapMessageImpl0.getObject((String) null);
      assertEquals(0L, (long)long0);
      
      mapMessageImpl0.setObject((String) null, (Object) long0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test22()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      // Undeclared exception!
      try {
        mapMessageImpl0.getLong("LpcWj,");
        fail("Expecting exception: NumberFormatException");
      } catch(NumberFormatException e) {
        /*
         * null
         */
      }
  }

  @Test
  public void test23()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.getObject("Cannot convert null value to char");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test24()  throws Throwable  {
      byte[] byteArray0 = new byte[8];
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setBytes("P'[#Ka", byteArray0);
      Object object0 = mapMessageImpl0.getObject("P'[#Ka");
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
      assertNotNull(object0);
  }

  @Test
  public void test25()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setBytes((String) null, (byte[]) null);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test26()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setBytes("", (byte[]) null, 11, 0);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }

  @Test
  public void test27()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      byte[] byteArray0 = new byte[7];
      // Undeclared exception!
      try {
        mapMessageImpl0.setBytes("or", byteArray0, (int) (byte)0, 48);
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      } catch(ArrayIndexOutOfBoundsException e) {
      }
  }

  @Test
  public void test28()  throws Throwable  {
      MapMessageImpl mapMessageImpl0 = new MapMessageImpl();
      assertNotNull(mapMessageImpl0);
      
      mapMessageImpl0.setObject((String) null, (Object) null);
      assertEquals("MapMessage", mapMessageImpl0.getJMSType());
  }
}
