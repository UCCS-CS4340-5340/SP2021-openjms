/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import javax.jms.JMSException;
import org.exolab.jms.client.JmsMessageListener;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.message.MessageImpl;
import org.exolab.jms.messagemgr.ConsumerEndpoint;
import org.exolab.jms.persistence.DatabaseService;
import org.exolab.jms.scheduler.Scheduler;
import org.exolab.jms.server.SessionConsumer;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestSessionConsumer {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer(0, (DatabaseService) null, (Scheduler) null);
      // Undeclared exception!
      try {
        sessionConsumer0.acknowledge((long) 0, "u");
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-1974), (DatabaseService) null, (Scheduler) null);
      ConsumerEndpoint[] consumerEndpointArray0 = sessionConsumer0.getConsumers();
      assertNotNull(consumerEndpointArray0);
  }

  @Test
  public void test2()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-1974), (DatabaseService) null, (Scheduler) null);
      sessionConsumer0.setMessageListener((JmsMessageListener) null);
  }

  @Test
  public void test3()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-14), (DatabaseService) null, (Scheduler) null);
      // Undeclared exception!
      try {
        sessionConsumer0.recover();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test4()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      SessionConsumer sessionConsumer0 = new SessionConsumer(0, databaseService0, (Scheduler) null);
      sessionConsumer0.close();
      assertEquals(false, databaseService0.isTransacted());
  }

  @Test
  public void test5()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      SessionConsumer sessionConsumer0 = new SessionConsumer((-419), databaseService0, (Scheduler) null);
      // Undeclared exception!
      try {
        sessionConsumer0.rollback();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test6()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      SessionConsumer sessionConsumer0 = new SessionConsumer((-434), databaseService0, (Scheduler) null);
      sessionConsumer0.commit();
  }

  @Test
  public void test7()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      SessionConsumer sessionConsumer0 = new SessionConsumer((-419), databaseService0, (Scheduler) null);
      try {
        sessionConsumer0.removeConsumer((long) (-419));
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * No consumer with id=-419
         */
      }
  }

  @Test
  public void test8()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-14), (DatabaseService) null, (Scheduler) null);
      MessageImpl messageImpl0 = sessionConsumer0.receiveNoWait(1024L);
      assertNull(messageImpl0);
  }

  @Test
  public void test9()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer(0, (DatabaseService) null, (Scheduler) null);
      try {
        sessionConsumer0.receive((long) 0, (long) 0);
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * Consumer not registered: 0
         */
      }
  }

  @Test
  public void test10()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-1981), (DatabaseService) null, (Scheduler) null);
      try {
        sessionConsumer0.receive((long) (-1981), 1807L);
        fail("Expecting exception: JMSException");
      } catch(JMSException e) {
        /*
         * Consumer not registered: -1981
         */
      }
  }

  @Test
  public void test11()  throws Throwable  {
      SessionConsumer sessionConsumer0 = new SessionConsumer((-1974), (DatabaseService) null, (Scheduler) null);
      sessionConsumer0.messageAvailable((ConsumerEndpoint) null);
  }
}
