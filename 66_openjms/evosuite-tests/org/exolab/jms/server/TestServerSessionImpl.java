/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.server;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.util.LinkedList;
import java.util.List;
import javax.jms.JMSException;
import javax.transaction.xa.XAException;
import javax.transaction.xa.XAResource;
import javax.transaction.xa.Xid;
import org.exolab.jms.client.JmsMessageListener;
import org.exolab.jms.config.Configuration;
import org.exolab.jms.message.MessageImpl;
import org.exolab.jms.messagemgr.ConsumerManager;
import org.exolab.jms.messagemgr.MessageManager;
import org.exolab.jms.messagemgr.MessageMgr;
import org.exolab.jms.messagemgr.ResourceManager;
import org.exolab.jms.persistence.DatabaseService;
import org.exolab.jms.scheduler.Scheduler;
import org.exolab.jms.server.ServerConnectionImpl;
import org.exolab.jms.server.ServerSessionImpl;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestServerSessionImpl {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      serverSessionImpl0.acknowledgeMessage((long) (-19), "R Bw|qZ[;e}0n]I");
  }

  @Test
  public void test1()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      serverSessionImpl0.setMessageListener((JmsMessageListener) null);
  }

  @Test
  public void test2()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      serverSessionImpl0.commit();
  }

  @Test
  public void test3()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      MessageImpl messageImpl0 = serverSessionImpl0.receiveNoWait((long) (-19));
      assertNull(messageImpl0);
  }

  @Test
  public void test4()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      Xid xid0 = serverSessionImpl0.getXid();
      assertNull(xid0);
  }

  @Test
  public void test5()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), false, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      assertNotNull(serverSessionImpl0);
  }

  @Test
  public void test6()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      LinkedList<ServerSessionImpl> linkedList0 = new LinkedList<ServerSessionImpl>();
      serverSessionImpl0.send((List) linkedList0);
      assertEquals("[]", linkedList0.toString());
  }

  @Test
  public void test7()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      serverSessionImpl0.stop();
  }

  @Test
  public void test8()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      // Undeclared exception!
      try {
        serverSessionImpl0.close();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test9()  throws Throwable  {
      Configuration configuration0 = new Configuration();
      DatabaseService databaseService0 = new DatabaseService(configuration0);
      MessageMgr messageMgr0 = new MessageMgr(databaseService0);
      ServerSessionImpl serverSessionImpl0 = new ServerSessionImpl((ServerConnectionImpl) null, (-19), true, (MessageManager) messageMgr0, (ConsumerManager) null, (ResourceManager) null, databaseService0, (Scheduler) null);
      boolean boolean0 = serverSessionImpl0.isSameRM((XAResource) null);
      assertEquals(false, boolean0);
  }
}
