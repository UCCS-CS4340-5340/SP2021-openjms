/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.config;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.Reader;
import java.io.StringReader;
import java.io.StringWriter;
import java.io.Writer;
import org.exolab.castor.util.NestedIOException;
import org.exolab.castor.xml.MarshalException;
import org.exolab.castor.xml.ValidationException;
import org.exolab.jms.config.ConnectionFactories;
import org.exolab.jms.config.Connector;
import org.exolab.jms.config.types.SchemeType;
import org.junit.BeforeClass;
import org.xml.sax.ContentHandler;
import org.xml.sax.helpers.XMLFilterImpl;

@RunWith(EvoSuiteRunner.class)
public class TestConnector {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Connector connector0 = new Connector();
      SchemeType schemeType0 = connector0.getScheme();
      assertNull(schemeType0);
  }

  @Test
  public void test1()  throws Throwable  {
      Connector connector0 = new Connector();
      boolean boolean0 = connector0.isValid();
      assertEquals(false, boolean0);
  }

  @Test
  public void test2()  throws Throwable  {
      Connector connector0 = new Connector();
      XMLFilterImpl xMLFilterImpl0 = new XMLFilterImpl();
      try {
        connector0.marshal((ContentHandler) xMLFilterImpl0);
        fail("Expecting exception: NestedIOException");
      } catch(NestedIOException e) {
        /*
         * System property org.xml.sax.parser not specified
         */
      }
  }

  @Test
  public void test3()  throws Throwable  {
      Connector connector0 = new Connector();
      connector0.setConnectionFactories((ConnectionFactories) null);
      assertEquals(false, connector0.isValid());
  }

  @Test
  public void test4()  throws Throwable  {
      Connector connector0 = new Connector();
      StringWriter stringWriter0 = new StringWriter(5);
      try {
        connector0.marshal((Writer) stringWriter0);
        fail("Expecting exception: ValidationException");
      } catch(ValidationException e) {
        /*
         * ConnectionFactories is a required field.
         */
      }
  }

  @Test
  public void test5()  throws Throwable  {
      Connector connector0 = new Connector();
      SchemeType schemeType0 = SchemeType.TCP;
      connector0.setScheme(schemeType0);
      assertEquals(0, schemeType0.getType());
  }

  @Test
  public void test6()  throws Throwable  {
      StringReader stringReader0 = new StringReader("");
      BufferedReader bufferedReader0 = new BufferedReader((Reader) stringReader0, 1858);
      try {
        Connector.unmarshal((Reader) bufferedReader0);
        fail("Expecting exception: MarshalException");
      } catch(MarshalException e) {
        /*
         * Parsing Error : Premature end of file.
         * Line : 1
         * Column : 1
         */
      }
  }
}
