/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.plugins.proxygen;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.io.IOException;
import java.io.PipedReader;
import java.io.PipedWriter;
import java.io.StringWriter;
import java.io.Writer;
import org.exolab.jms.plugins.proxygen.SourceWriter;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestSourceWriter {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      sourceWriter0.writelnInc("");
      sourceWriter0.writelnInc();
  }

  @Test
  public void test1()  throws Throwable  {
      PipedReader pipedReader0 = new PipedReader();
      PipedWriter pipedWriter0 = new PipedWriter(pipedReader0);
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      sourceWriter0.writelnDec();
  }

  @Test
  public void test2()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      sourceWriter0.writeln();
  }

  @Test
  public void test3()  throws Throwable  {
      StringWriter stringWriter0 = new StringWriter(0);
      SourceWriter sourceWriter0 = new SourceWriter((Writer) stringWriter0);
      sourceWriter0.writelnDec("N-)!r!tg*'Tl\"");
  }

  @Test
  public void test4()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      // Undeclared exception!
      try {
        sourceWriter0.write((char[]) null, 0, (-217));
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test5()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      SourceWriter sourceWriter1 = (SourceWriter)sourceWriter0.append('|');
      assertSame(sourceWriter1, sourceWriter0);
  }

  @Test
  public void test6()  throws Throwable  {
      PipedWriter pipedWriter0 = new PipedWriter();
      SourceWriter sourceWriter0 = new SourceWriter((Writer) pipedWriter0);
      sourceWriter0.writelnInc();
  }
}
