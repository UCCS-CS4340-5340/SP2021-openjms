/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.migration.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import javax.jms.JMSException;
import javax.jms.Message;
import org.exolab.jms.message.TextMessageImpl;
import org.exolab.jms.persistence.PersistenceException;
import org.exolab.jms.tools.migration.proxy.DestinationStore;
import org.exolab.jms.tools.migration.proxy.TextMessageHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestTextMessageHandler {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      TextMessageHandler textMessageHandler0 = new TextMessageHandler((DestinationStore) null, (Connection) null);
      TextMessageImpl textMessageImpl0 = (TextMessageImpl)textMessageHandler0.newMessage();
      assertNull(textMessageImpl0.toString());
  }

  @Test
  public void test1()  throws Throwable  {
      TextMessageHandler textMessageHandler0 = new TextMessageHandler((DestinationStore) null, (Connection) null);
      String string0 = textMessageHandler0.getType();
      assertEquals("TextMessage", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      TextMessageHandler textMessageHandler0 = new TextMessageHandler((DestinationStore) null, (Connection) null);
      TextMessageImpl textMessageImpl0 = new TextMessageImpl();
      Object object0 = textMessageHandler0.getBody((Message) textMessageImpl0);
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      TextMessageHandler textMessageHandler0 = new TextMessageHandler((DestinationStore) null, (Connection) null);
      TextMessageImpl textMessageImpl0 = new TextMessageImpl();
      textMessageHandler0.setBody((Object) null, (Message) textMessageImpl0);
      assertEquals(false, textMessageImpl0.getJMSRedelivered());
  }

  @Test
  public void test4()  throws Throwable  {
      TextMessageHandler textMessageHandler0 = new TextMessageHandler((DestinationStore) null, (Connection) null);
      TextMessageImpl textMessageImpl0 = new TextMessageImpl();
      textMessageHandler0.setBody((Object) "absolute", (Message) textMessageImpl0);
      assertEquals(0, textMessageImpl0.getJMSPriority());
  }
}
