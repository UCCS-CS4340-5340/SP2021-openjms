/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.migration.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import java.util.Iterator;
import java.util.concurrent.DelayQueue;
import javax.jms.JMSException;
import javax.jms.Message;
import org.exolab.jms.message.MessageImpl;
import org.exolab.jms.persistence.PersistenceException;
import org.exolab.jms.tools.migration.IteratorAdapter;
import org.exolab.jms.tools.migration.StoreIterator;
import org.exolab.jms.tools.migration.proxy.DestinationStore;
import org.exolab.jms.tools.migration.proxy.MessageStore;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestMessageStore {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      MessageStore messageStore0 = new MessageStore((DestinationStore) null, (Connection) null);
      MessageImpl messageImpl0 = new MessageImpl();
      // Undeclared exception!
      try {
        messageStore0.add((Message) messageImpl0);
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test1()  throws Throwable  {
      MessageStore messageStore0 = new MessageStore((DestinationStore) null, (Connection) null);
      // Undeclared exception!
      try {
        messageStore0.exportCollection();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test2()  throws Throwable  {
      MessageStore messageStore0 = new MessageStore((DestinationStore) null, (Connection) null);
      // Undeclared exception!
      try {
        messageStore0.size();
        fail("Expecting exception: NullPointerException");
      } catch(NullPointerException e) {
      }
  }

  @Test
  public void test3()  throws Throwable  {
      MessageStore messageStore0 = new MessageStore((DestinationStore) null, (Connection) null);
      DelayQueue<Object> delayQueue0 = new DelayQueue<Object>();
      Iterator<Object> iterator0 = delayQueue0.iterator();
      IteratorAdapter iteratorAdapter0 = new IteratorAdapter(iterator0);
      messageStore0.importCollection((StoreIterator) iteratorAdapter0);
      assertEquals(false, iteratorAdapter0.hasNext());
  }
}
