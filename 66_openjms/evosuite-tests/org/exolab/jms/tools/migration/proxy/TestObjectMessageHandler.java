/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.migration.proxy;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import java.sql.Connection;
import javax.jms.JMSException;
import javax.jms.Message;
import org.exolab.jms.message.ObjectMessageImpl;
import org.exolab.jms.persistence.PersistenceException;
import org.exolab.jms.tools.migration.proxy.DestinationStore;
import org.exolab.jms.tools.migration.proxy.ObjectMessageHandler;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestObjectMessageHandler {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      ObjectMessageHandler objectMessageHandler0 = new ObjectMessageHandler((DestinationStore) null, (Connection) null);
      ObjectMessageImpl objectMessageImpl0 = (ObjectMessageImpl)objectMessageHandler0.newMessage();
      Boolean boolean0 = Boolean.valueOf(false);
      objectMessageHandler0.setBody((Object) boolean0, (Message) objectMessageImpl0);
      assertNull(objectMessageImpl0.getJMSMessageID());
  }

  @Test
  public void test1()  throws Throwable  {
      ObjectMessageHandler objectMessageHandler0 = new ObjectMessageHandler((DestinationStore) null, (Connection) null);
      String string0 = objectMessageHandler0.getType();
      assertEquals("ObjectMessage", string0);
  }

  @Test
  public void test2()  throws Throwable  {
      ObjectMessageHandler objectMessageHandler0 = new ObjectMessageHandler((DestinationStore) null, (Connection) null);
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      Object object0 = objectMessageHandler0.getBody((Message) objectMessageImpl0);
      assertNull(object0);
  }

  @Test
  public void test3()  throws Throwable  {
      ObjectMessageHandler objectMessageHandler0 = new ObjectMessageHandler((DestinationStore) null, (Connection) null);
      ObjectMessageImpl objectMessageImpl0 = new ObjectMessageImpl();
      objectMessageHandler0.setBody((Object) null, (Message) objectMessageImpl0);
      assertEquals(0, objectMessageImpl0.getJMSPriority());
  }
}
