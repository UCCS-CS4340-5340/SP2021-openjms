/*
 * This file was automatically generated by EvoSuite
 */

package org.exolab.jms.tools.db;

import org.junit.Test;
import org.junit.runner.RunWith;
import org.evosuite.junit.EvoSuiteRunner;
import static org.junit.Assert.*;
import org.exolab.castor.xml.ValidationException;
import org.exolab.jms.tools.db.Column;
import org.exolab.jms.tools.db.Index;
import org.exolab.jms.tools.db.IndexDescriptor;
import org.junit.BeforeClass;

@RunWith(EvoSuiteRunner.class)
public class TestIndexDescriptor {

  @BeforeClass 
  public static void initEvoSuiteFramework(){ 
    org.evosuite.Properties.REPLACE_CALLS = true; 
  } 


  @Test
  public void test0()  throws Throwable  {
      Index index0 = new Index();
      Column column0 = new Column();
      index0.addColumn(column0);
      boolean boolean0 = index0.isValid();
      assertEquals(false, boolean0);
  }

  @Test
  public void test1()  throws Throwable  {
      IndexDescriptor indexDescriptor0 = new IndexDescriptor();
      indexDescriptor0.getNameSpacePrefix();
      assertEquals("http://www.openjms.org/database/schema", indexDescriptor0.getNameSpaceURI());
      assertEquals("index", indexDescriptor0.getXMLName());
  }

  @Test
  public void test2()  throws Throwable  {
      IndexDescriptor indexDescriptor0 = new IndexDescriptor();
      indexDescriptor0.getAccessMode();
      assertEquals("index", indexDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", indexDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test3()  throws Throwable  {
      IndexDescriptor indexDescriptor0 = new IndexDescriptor();
      indexDescriptor0.getIdentity();
      assertEquals("index", indexDescriptor0.getXMLName());
      assertEquals("http://www.openjms.org/database/schema", indexDescriptor0.getNameSpaceURI());
  }

  @Test
  public void test4()  throws Throwable  {
      IndexDescriptor indexDescriptor0 = new IndexDescriptor();
      indexDescriptor0.getExtends();
      assertEquals("http://www.openjms.org/database/schema", indexDescriptor0.getNameSpaceURI());
      assertEquals("index", indexDescriptor0.getXMLName());
  }

  @Test
  public void test5()  throws Throwable  {
      IndexDescriptor indexDescriptor0 = new IndexDescriptor();
      String string0 = indexDescriptor0.getNameSpaceURI();
      assertNotNull(string0);
      assertEquals("http://www.openjms.org/database/schema", string0);
      assertEquals("index", indexDescriptor0.getXMLName());
  }

  @Test
  public void test6()  throws Throwable  {
      Index index0 = new Index();
      Column column0 = new Column();
      index0.setName("KRs$4g@7{");
      index0.addColumn(column0);
      index0.setUnique(true);
      index0.validate();
      assertEquals(true, index0.hasUnique());
  }

  @Test
  public void test7()  throws Throwable  {
      Index index0 = new Index();
      Column column0 = new Column();
      index0.setName("KRs$4g@7{");
      index0.addColumn(column0);
      boolean boolean0 = index0.isValid();
      assertEquals(true, boolean0);
  }
}
